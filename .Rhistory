install.packages(c("tidyverse","ggplot2","lubridate","dplyr","readr","geosphere","scales", "janitor"))
library(tidyverse)
library(ggplot2)
library(lubridate)
library(dplyr)
library(readr)
library(geosphere)
library(scales)
library(janitor)
tripdata_202106 <- read.csv("./data/202106-divvy-tripdata.csv")
tripdata_202107 <- read.csv("./data/202107-divvy-tripdata.csv")
tripdata_202108 <- read.csv("./data/202108-divvy-tripdata.csv")
tripdata_202109 <- read.csv("./data/202109-divvy-tripdata.csv")
tripdata_202110 <- read.csv("./data/202110-divvy-tripdata.csv")
tripdata_202111 <- read.csv("./data/202111-divvy-tripdata.csv")
tripdata_202112 <- read.csv("./data/202112-divvy-tripdata.csv")
tripdata_202201 <- read.csv("./data/202201-divvy-tripdata.csv")
tripdata_202202 <- read.csv("./data/202202-divvy-tripdata.csv")
tripdata_202203 <- read.csv("./data/202203-divvy-tripdata.csv")
tripdata_202204 <- read.csv("./data/202204-divvy-tripdata.csv")
tripdata_202205 <- read.csv("./data/202205-divvy-tripdata.csv")
glimpse(tripdata_202106)
column_names <- colnames(data_list[[1]])
data_list = list(tripdata_202106, tripdata_202107, tripdata_202108, tripdata_202109, tripdata_202110, tripdata_202111, tripdata_202112, tripdata_202201, tripdata_202202, tripdata_202203, tripdata_202204, tripdata_202205)
column_names <- colnames(data_list[[1]])
print(column_names)
for (df in data_list) {
df_colnames <- colnames(df)
print(column_names %in% df_colnames)
}
compare_df_cols(data_list, return = c("mismatch"), bind_method = c("bind_rows"))
all_trips <- bind_rows(data_list)
head(all_trips)
all_trips <- bind_rows(data_list)
head(all_trips)
all_trips$started_at = as.POSIXct(all_trips$started_at, format = "%Y-%m-%d %H:%M:%S")
all_trips$ended_at = as.POSIXct(all_trips$ended_at, format = "%Y-%m-%d %H:%M:%S")
head(all_trips)
all_trips[all_trips==""] <- NA
tripdata_202106 <- read.csv("./data/202106-divvy-tripdata.csv")
tripdata_202107 <- read.csv("./data/202107-divvy-tripdata.csv")
tripdata_202108 <- read.csv("./data/202108-divvy-tripdata.csv")
tripdata_202109 <- read.csv("./data/202109-divvy-tripdata.csv")
tripdata_202110 <- read.csv("./data/202110-divvy-tripdata.csv")
tripdata_202111 <- read.csv("./data/202111-divvy-tripdata.csv")
tripdata_202112 <- read.csv("./data/202112-divvy-tripdata.csv")
tripdata_202201 <- read.csv("./data/202201-divvy-tripdata.csv")
tripdata_202202 <- read.csv("./data/202202-divvy-tripdata.csv")
tripdata_202203 <- read.csv("./data/202203-divvy-tripdata.csv")
tripdata_202204 <- read.csv("./data/202204-divvy-tripdata.csv")
tripdata_202205 <- read.csv("./data/202205-divvy-tripdata.csv")
all_trips[all_trips$started_at == ""] <- NA
library(tidyverse)
library(ggplot2)
library(lubridate)
library(dplyr)
library(readr)
library(geosphere)
library(scales)
library(janitor)
tripdata_202106 <- read.csv("./data/202106-divvy-tripdata.csv")
tripdata_202107 <- read.csv("./data/202107-divvy-tripdata.csv")
tripdata_202108 <- read.csv("./data/202108-divvy-tripdata.csv")
tripdata_202109 <- read.csv("./data/202109-divvy-tripdata.csv")
tripdata_202110 <- read.csv("./data/202110-divvy-tripdata.csv")
tripdata_202111 <- read.csv("./data/202111-divvy-tripdata.csv")
tripdata_202112 <- read.csv("./data/202112-divvy-tripdata.csv")
tripdata_202201 <- read.csv("./data/202201-divvy-tripdata.csv")
tripdata_202202 <- read.csv("./data/202202-divvy-tripdata.csv")
tripdata_202203 <- read.csv("./data/202203-divvy-tripdata.csv")
tripdata_202204 <- read.csv("./data/202204-divvy-tripdata.csv")
tripdata_202205 <- read.csv("./data/202205-divvy-tripdata.csv")
glimpse(tripdata_202106)
column_names <- colnames(data_list[[1]])
print(column_names)
for (df in data_list) {
df_colnames <- colnames(df)
print(column_names %in% df_colnames)
}
compare_df_cols(data_list, return = c("mismatch"), bind_method = c("bind_rows"))
all_trips <- bind_rows(data_list)
head(all_trips)
glimpse(all_trips)
all_trips[all_trips==""] <- NA
glimpse(all_trips)
sapply(all_trips, function(x) sum(is.na(x)))
all_trips <- drop_na(all_trips)
glimpse(all_trips)
all_trips <- all_trips[!duplicated(all_trips$ride_id),]
glimpse(all_trips)
bike_types <- list(unique(all_trips$rideable_type))
print(bike_types)
member_type <- list(unique(all_trips$member_casual))
print(member_type)
all_trips$started_at = as.POSIXct(all_trips$started_at, format = "%Y-%m-%d %H:%M:%S")
all_trips$ended_at = as.POSIXct(all_trips$ended_at, format = "%Y-%m-%d %H:%M:%S")
all_trips_2 <- mutate(all_trips, time_difference_hours = difftime(ended_at, started_at, units = "hours")) %>%
mutate(all_trips, distance_km = distHaversine(cbind(start_lng, start_lat), cbind(end_lng, end_lat))*0.001)
head(all_trips_2)
summary(all_trips_2$distance_km)
outlier_df <- filter(all_trips_2, (distance_km > 1000))
print(outlier_df$ride_id)
print(outlier_df$time_difference_hours)
print(paste("Distance (km): ", outlier_df$distance_km, " Duration: ", outlier_df$time_difference_hours, " Start Station: ", outlier_df$start_station_name, " End Station: ", outlier_df$end_station_name))
all_trips_cleaned <- filter(all_trips_2, !(distance_km > 1000 & time_difference_hours < 0.05))
summary(all_trips_cleaned$distance_km)
summary(all_trips_cleaned)
ggplot(all_trips_cleaned, aes(x=member_casual)) +
geom_bar(fill = "Orange") +
labs(
title = "Number of rides completed by user type",
subtitle = "For the period between June 2021 and May 2022",
x = "User Type",
y = "Number of riders (in millions)") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6)) +
geom_text(stat = 'count', aes(label=..count..), vjust=+2, color="white")
data_bar2 <- all_trips_cleaned %>%
group_by(member_casual) %>%
summarise(distance_km=sum(distance_km, na.rm=TRUE))
ggplot(data_bar2, aes(x=member_casual, y=distance_km)) +
geom_bar(stat= "identity", fill= "blue") +
labs(
title = "Distance travelled by user type",
subtitle = "For the period between June 2021 and May 2022",
x = "User type",
y = "Distance travelled (kilometers)") +
scale_y_continuous(labels = label_number(suffix = " M", scale = 2e-6)) +
geom_text(aes(label=round(stat(y),2)), vjust=+2, color="white")
data_bar2.1 <- all_trips_cleaned %>%
group_by(member_casual) %>%
summarise(average_distance_km=mean(distance_km, na.rm=TRUE))
print(data_bar2.1)
data_bar3 <- all_trips_cleaned %>%
group_by(member_casual) %>%
summarise(time=sum(time_difference_hours, na.rm=TRUE))
ggplot(data_bar3, aes(x=member_casual, y=time)) +
geom_bar(stat = "identity", fill = "yellow") +
labs(
title = "Hours cycled by user type",
subtitle = "For the period between June 2021 and May 2022",
x = "User type",
y = "Hours cycled") +
scale_y_continuous(labels = label_number(suffix = " Hrs", scale = 1e-6)) +
geom_text(aes(label=round(time, 2)), vjust=+2, color="black")
data_bar3.1 <- all_trips_cleaned %>%
group_by(member_casual) %>%
summarise(average_time=mean(time_difference_hours, na.rm=TRUE))
print(data_bar3.1)
data_bar4 <- all_trips_cleaned %>%
group_by(member_casual, rideable_type) %>%
summarise(count_of = n())
ggplot(data_bar4, aes(x=member_casual, y=count_of, fill = rideable_type)) +
geom_bar(stat="identity") +
labs(
title = "Bike preference by user type",
subtitle = "For the period between June 2021 and May 2022",
fill = "Bike type",
x = "User type",
y = "Number of users") +
geom_text(aes(label=count_of), position = position_stack(vjust = .5), color="white") +
scale_y_continuous(labels = label_number(suffix = " M", scale = 1e-6))
data_bar5 <- mutate(all_trips_cleaned, start_month_year = floor_date(as_date(started_at), "month")) %>%
group_by(start_month_year, member_casual) %>%
summarise(count_of = n())
ggplot(data_bar5, aes(x=start_month_year, y=count_of, fill="orange"))+
geom_bar(stat="identity") +
facet_wrap(~member_casual)+
labs(
title = "Number of rides completed by month by user type",
subtitle = "For the period between June 2021 and May 2022",
x = "Month",
y = "Number of rides completed") +
geom_text(aes(label=count_of), position = position_stack(vjust = .5), color="black", angle = 90) +
scale_y_continuous(labels = label_number(suffix = " M", scale = 1e-6)) +
scale_x_date(date_labels = "%b %y", date_breaks = "2 month") +
theme(legend.position = "none")
data_bar6 <- mutate(all_trips_cleaned, start_day = weekdays(started_at)) %>%
group_by(start_day, member_casual) %>%
summarise(count_of = n())
level_order <-c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')
ggplot(data_bar6, aes(x=factor(start_day, level = level_order), y=count_of, fill=member_casual))+
geom_bar(stat="identity") +
facet_wrap(~member_casual) +
labs(
title = "Number of rides completed by day by user type",
subtitle = "For the period between June 2021 and May 2022",
x = "Day",
y = "Number of rides completed",
fill = "User type") +
geom_text(aes(label=count_of), position = position_stack(vjust = .5), color="black", angle = 90) +
scale_y_continuous(labels = label_number(suffix = " M", scale = 1e-6)) +
theme(axis.text.x=element_text(angle = 90))
install.packages(c("tidyverse","ggplot2","lubridate","dplyr","readr","geosphere","scales", "janitor"))
library(tidyverse)
library(ggplot2)
library(lubridate)
library(dplyr)
library(readr)
library(geosphere)
library(scales)
library(janitor)
tripdata_202106 <- read.csv("./data/202106-divvy-tripdata.csv")
tripdata_202107 <- read.csv("./data/202107-divvy-tripdata.csv")
tripdata_202108 <- read.csv("./data/202108-divvy-tripdata.csv")
tripdata_202109 <- read.csv("./data/202109-divvy-tripdata.csv")
tripdata_202110 <- read.csv("./data/202110-divvy-tripdata.csv")
tripdata_202111 <- read.csv("./data/202111-divvy-tripdata.csv")
tripdata_202112 <- read.csv("./data/202112-divvy-tripdata.csv")
tripdata_202201 <- read.csv("./data/202201-divvy-tripdata.csv")
tripdata_202202 <- read.csv("./data/202202-divvy-tripdata.csv")
tripdata_202203 <- read.csv("./data/202203-divvy-tripdata.csv")
tripdata_202204 <- read.csv("./data/202204-divvy-tripdata.csv")
tripdata_202205 <- read.csv("./data/202205-divvy-tripdata.csv")
glimpse(tripdata_202106)
data_list = list(tripdata_202106, tripdata_202107, tripdata_202108, tripdata_202109, tripdata_202110, tripdata_202111, tripdata_202112, tripdata_202201, tripdata_202202, tripdata_202203, tripdata_202204, tripdata_202205)
column_names <- colnames(data_list[[1]])
print(column_names)
for (df in data_list) {
df_colnames <- colnames(df)
print(column_names %in% df_colnames)
}
compare_df_cols(data_list, return = c("mismatch"), bind_method = c("bind_rows"))
all_trips <- bind_rows(data_list)
head(all_trips)
glimpse(all_trips)
all_trips[all_trips==""] <- NA
glimpse(all_trips)
sapply(all_trips, function(x) sum(is.na(x)))
all_trips <- drop_na(all_trips)
glimpse(all_trips)
all_trips <- all_trips[!duplicated(all_trips$ride_id),]
glimpse(all_trips)
bike_types <- list(unique(all_trips$rideable_type))
print(bike_types)
member_type <- list(unique(all_trips$member_casual))
print(member_type)
all_trips$started_at = as.POSIXct(all_trips$started_at, format = "%Y-%m-%d %H:%M:%S")
all_trips$ended_at = as.POSIXct(all_trips$ended_at, format = "%Y-%m-%d %H:%M:%S")
all_trips_2 <- mutate(all_trips, time_difference_hours = difftime(ended_at, started_at, units = "hours")) %>%
mutate(all_trips, distance_km = distHaversine(cbind(start_lng, start_lat), cbind(end_lng, end_lat))*0.001)
head(all_trips_2)
summary(all_trips_2$distance_km)
outlier_df <- filter(all_trips_2, (distance_km > 1000))
print(outlier_df$ride_id)
print(outlier_df$time_difference_hours)
print(paste("Distance (km): ", outlier_df$distance_km, " Duration: ", outlier_df$time_difference_hours, " Start Station: ", outlier_df$start_station_name, " End Station: ", outlier_df$end_station_name))
all_trips_cleaned <- filter(all_trips_2, !(distance_km > 1000 & time_difference_hours < 0.05))
summary(all_trips_cleaned$distance_km)
summary(all_trips_cleaned)
ggplot(all_trips_cleaned, aes(x=member_casual)) +
geom_bar(fill = "Orange") +
labs(
title = "Number of rides completed by user type",
subtitle = "For the period between June 2021 and May 2022",
x = "User Type",
y = "Number of riders (in millions)") +
scale_y_continuous(labels = label_number(suffix = "M", scale = 1e-6)) +
geom_text(stat = 'count', aes(label=..count..), vjust=+2, color="white")
data_bar2 <- all_trips_cleaned %>%
group_by(member_casual) %>%
summarise(distance_km=sum(distance_km, na.rm=TRUE))
ggplot(data_bar2, aes(x=member_casual, y=distance_km)) +
geom_bar(stat= "identity", fill= "blue") +
labs(
title = "Distance travelled by user type",
subtitle = "For the period between June 2021 and May 2022",
x = "User type",
y = "Distance travelled (kilometers)") +
scale_y_continuous(labels = label_number(suffix = " M", scale = 2e-6)) +
geom_text(aes(label=round(stat(y),2)), vjust=+2, color="white")
data_bar2.1 <- all_trips_cleaned %>%
group_by(member_casual) %>%
summarise(average_distance_km=mean(distance_km, na.rm=TRUE))
print(data_bar2.1)
data_bar3 <- all_trips_cleaned %>%
group_by(member_casual) %>%
summarise(time=sum(time_difference_hours, na.rm=TRUE))
ggplot(data_bar3, aes(x=member_casual, y=time)) +
geom_bar(stat = "identity", fill = "yellow") +
labs(
title = "Hours cycled by user type",
subtitle = "For the period between June 2021 and May 2022",
x = "User type",
y = "Hours cycled") +
scale_y_continuous(labels = label_number(suffix = " Hrs", scale = 1e-6)) +
geom_text(aes(label=round(time, 2)), vjust=+2, color="black")
data_bar3.1 <- all_trips_cleaned %>%
group_by(member_casual) %>%
summarise(average_time=mean(time_difference_hours, na.rm=TRUE))
print(data_bar3.1)
data_bar4 <- all_trips_cleaned %>%
group_by(member_casual, rideable_type) %>%
summarise(count_of = n())
ggplot(data_bar4, aes(x=member_casual, y=count_of, fill = rideable_type)) +
geom_bar(stat="identity") +
labs(
title = "Bike preference by user type",
subtitle = "For the period between June 2021 and May 2022",
fill = "Bike type",
x = "User type",
y = "Number of users") +
geom_text(aes(label=count_of), position = position_stack(vjust = .5), color="white") +
scale_y_continuous(labels = label_number(suffix = " M", scale = 1e-6))
data_bar5 <- mutate(all_trips_cleaned, start_month_year = floor_date(as_date(started_at), "month")) %>%
group_by(start_month_year, member_casual) %>%
summarise(count_of = n())
ggplot(data_bar5, aes(x=start_month_year, y=count_of, fill="orange"))+
geom_bar(stat="identity") +
facet_wrap(~member_casual)+
labs(
title = "Number of rides completed by month by user type",
subtitle = "For the period between June 2021 and May 2022",
x = "Month",
y = "Number of rides completed") +
geom_text(aes(label=count_of), position = position_stack(vjust = .5), color="black", angle = 90) +
scale_y_continuous(labels = label_number(suffix = " M", scale = 1e-6)) +
scale_x_date(date_labels = "%b %y", date_breaks = "2 month") +
theme(legend.position = "none")
data_bar6 <- mutate(all_trips_cleaned, start_day = weekdays(started_at)) %>%
group_by(start_day, member_casual) %>%
summarise(count_of = n())
level_order <-c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')
ggplot(data_bar6, aes(x=factor(start_day, level = level_order), y=count_of, fill=member_casual))+
geom_bar(stat="identity") +
facet_wrap(~member_casual) +
labs(
title = "Number of rides completed by day by user type",
subtitle = "For the period between June 2021 and May 2022",
x = "Day",
y = "Number of rides completed",
fill = "User type") +
geom_text(aes(label=count_of), position = position_stack(vjust = .5), color="black", angle = 90) +
scale_y_continuous(labels = label_number(suffix = " M", scale = 1e-6)) +
theme(axis.text.x=element_text(angle = 90))
table1 <- all_trips_cleaned %>%
group_by(member_casual, start_station_name) %>%
summarise(count_of=n()) %>%
arrange(desc(count_of)) %>%
na.omit(start_station_name)
## Table 1.1 - By casual riders ##
table1.1 <- filter(table1, member_casual =="casual") %>%
rename(number_of_trips = count_of) %>%
slice(1:5)
#Table 1.2 - By members ##
table1.2 <- filter(table1, member_casual =="member") %>%
rename(number_of_trips = count_of) %>%
slice(1:5)
print(table1.1)
print(table1.2)
table2 <- all_trips_cleaned %>%
group_by(member_casual, end_station_name) %>%
summarise(count_of=n()) %>%
arrange(desc(count_of)) %>%
na.omit(end_station_name)
## Table 2.1 - By casual riders ##
table2.1 <- filter(table2, member_casual =="casual") %>%
rename(number_of_trips = count_of) %>%
slice(1:5)
#Table 2.2 - By members ##
table2.2 <- filter(table2, member_casual =="member") %>%
rename(number_of_trips = count_of) %>%
slice(1:5)
print(table2.1)
print(table2.2)
data_bar3 <- all_trips_cleaned %>%
group_by(member_casual) %>%
summarise(time=sum(time_difference_hours, na.rm=TRUE))
data_bar3 <- all_trips_cleaned %>%
group_by(member_casual) %>%
summarise(time=sum(time_difference_hours, na.rm=TRUE))
